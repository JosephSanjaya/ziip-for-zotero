enableFeaturePreview('VERSION_CATALOGS')
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://maven.google.com/" }
        mavenCentral()
        mavenLocal()
        gradlePluginPortal()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    versionCatalogs {
        libs {
            version('desugar', '1.1.5')
            version('build-tools', '30.0.3')
            version('core-ktx', '1.6.0')
            version('arrow', '0.13.2')
            version('junit', '4.13.2')
            version('androidx-junit', '1.1.3')
            version('espresso', '3.4.0')
            version('appcompat', '1.4.0-alpha03')
            version('kotlin', '1.5.31')
            version('koin', '3.1.2')
            version('fragment', '1.3.6')
            version('room', '2.3.0')
            version('navigation', '2.3.5')
            version('coil', '1.3.2')
            version('lifecycle', '2.3.1')
            version('retrofit', '2.9.0')
            version('chucker', '3.5.2')
            version('coroutines', '1.4.2-native-mt')
            version('adapter', '3.0.6')
            version('utils', '1.30.6')
            version('work-manager', '2.6.0')
            version('deep-link', '5.4.3')
            version('ksp', '1.5.31-1.0.0')
            version('builder-anno', '1.2.0')
            version('okhttp', '4.9.0')
            version('splitties', '3.0.0')
            version('shortbread', '1.4.0')

            /**
             * Androidx App
             */
            alias('androidx-fragment')
                    .to('androidx.fragment', 'fragment-ktx')
                    .versionRef('fragment')
            alias('androidx-activity')
                    .to('androidx.activity:activity-ktx:1.3.1')
            alias('androidx-multidex')
                    .to('androidx.multidex:multidex:2.0.1')
            alias('androidx-viewpager')
                    .to('androidx.viewpager2:viewpager2:1.1.0-beta01')
            alias('androidx-card')
                    .to('androidx.cardview:cardview:1.0.0')
            alias('androidx-constraint')
                    .to('androidx.constraintlayout:constraintlayout:2.1.0')
            alias('androidx-biometric')
                    .to('androidx.biometric:biometric:1.1.0')
            alias('material-design')
                    .to('com.google.android.material:material:1.4.0')
            bundle('androidx-app', [
                    'androidx-fragment',
                    'androidx-activity',
                    'androidx-multidex',
                    'androidx-viewpager',
                    'androidx-card',
                    'androidx-constraint',
                    'androidx-biometric',
                    'material-design',
            ])

            /**
             * Koin Dependencies
             */
            alias('androidx-core')
                    .to('androidx.core', 'core-ktx')
                    .versionRef('core-ktx')
            alias('appcompat')
                    .to('androidx.appcompat', 'appcompat')
                    .versionRef('appcompat')
            alias('appcompat-resource')
                    .to('androidx.appcompat', 'appcompat-resources')
                    .versionRef('appcompat')
            bundle('androidx-compat', [
                    'androidx-core',
                    'appcompat',
                    'appcompat-resource',
            ])


            /**
             * Image Processors (Coil/Glide)
             */
            alias('coil')
                    .to('io.coil-kt', 'coil')
                    .versionRef('coil')
            alias('coil-svg')
                    .to('io.coil-kt', 'coil-svg')
                    .versionRef('coil')
            alias('coil-gif')
                    .to('io.coil-kt', 'coil-gif')
                    .versionRef('coil')
            bundle('image-processor', [
                    'coil',
                    'coil-svg',
                    'coil-gif',
            ])

            /**
             * Navigation
             */
            alias('navigation-fragment')
                    .to('androidx.navigation', 'navigation-fragment-ktx')
                    .versionRef('navigation')
            alias('navigation-ui')
                    .to('androidx.navigation', 'navigation-ui-ktx')
                    .versionRef('navigation')
            bundle('navigation', [
                    'navigation-fragment',
                    'navigation-ui',
            ])

            /**
             * Koin Dependencies
             */
            alias('koin-android')
                    .to('io.insert-koin', 'koin-android')
                    .versionRef('koin')
            alias('koin-compat')
                    .to('io.insert-koin', 'koin-android-compat')
                    .versionRef('koin')
            alias('koin-workmanager')
                    .to('io.insert-koin', 'koin-androidx-workmanager')
                    .versionRef('koin')
            bundle('koin', [
                    'koin-android',
                    'koin-compat',
                    'koin-workmanager',
            ])

            /**
             * Jetpack Lifecycle
             */
            alias('lifecycle-viewmodel-ktx')
                    .to('androidx.lifecycle', 'lifecycle-viewmodel-ktx')
                    .versionRef('lifecycle')
            alias('lifecycle-viewmodel-savedstate')
                    .to('androidx.lifecycle', 'lifecycle-viewmodel-savedstate')
                    .versionRef('lifecycle')
            alias('lifecycle-livedata-ktx')
                    .to('androidx.lifecycle', 'lifecycle-livedata-ktx')
                    .versionRef('lifecycle')
            alias('lifecycle-runtime-ktx')
                    .to('androidx.lifecycle', 'lifecycle-runtime-ktx')
                    .versionRef('lifecycle')
            alias('lifecycle-common-java8')
                    .to('androidx.lifecycle', 'lifecycle-common-java8')
                    .versionRef('lifecycle')
            alias('lifecycle-service')
                    .to('androidx.lifecycle', 'lifecycle-service')
                    .versionRef('lifecycle')
            alias('lifecycle-process')
                    .to('androidx.lifecycle', 'lifecycle-process')
                    .versionRef('lifecycle')
            bundle('jetpack-lifecycle', [
                    'lifecycle-viewmodel-ktx',
                    'lifecycle-viewmodel-savedstate',
                    'lifecycle-livedata-ktx',
                    'lifecycle-runtime-ktx',
                    'lifecycle-common-java8',
                    'lifecycle-service',
                    'lifecycle-process',
            ])

            /**
             * Retrofit
             */
            alias('retrofit-core')
                    .to('com.squareup.retrofit2', 'retrofit')
                    .versionRef('retrofit')
            alias('gson')
                    .to('com.google.code.gson:gson:2.8.8')
            alias('retrofit-gson')
                    .to('com.squareup.retrofit2', 'converter-gson')
                    .versionRef('retrofit')
            alias('retrofit-scalars')
                    .to('com.squareup.retrofit2', 'converter-scalars')
                    .versionRef('retrofit')
            alias('okhttp-core')
                    .to('com.squareup.okhttp3', 'okhttp')
                    .versionRef('okhttp')
            alias('okhttp-logging')
                    .to('com.squareup.okhttp3', 'logging-interceptor')
                    .versionRef('okhttp')
            alias('okhttp-urlconnection')
                    .to('com.squareup.okhttp3', 'okhttp-urlconnection')
                    .versionRef('okhttp')
            alias('retrofit-coroutines')
                    .to('com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2')
            bundle('retrofit', [
                    'retrofit-core',
                    'gson',
                    'retrofit-gson',
                    'retrofit-scalars',
                    'retrofit-coroutines',
                    'okhttp-core',
                    'okhttp-logging',
                    'okhttp-urlconnection',
            ])

            /**
             * Kotlin Base
             */
            alias('kotlin-reflect')
                    .to('org.jetbrains.kotlin', 'kotlin-reflect')
                    .versionRef('kotlin')
            alias('kotlin-stdlib')
                    .to('org.jetbrains.kotlin', 'kotlin-stdlib-jdk8')
                    .versionRef('kotlin')
            alias('kotlin-coroutines')
                    .to('org.jetbrains.kotlinx', 'kotlinx-coroutines-core')
                    .versionRef('coroutines')
            bundle('kotlin-base', [
                    'kotlin-reflect',
                    'kotlin-stdlib',
                    'kotlin-coroutines',
            ])

            /**
             * Firebase
             */
            alias('firebase-crashlytics')
                    .to('com.google.firebase:firebase-crashlytics-ktx:18.2.1')
            alias('firebase-analytics')
                    .to('com.google.firebase:firebase-analytics-ktx:19.0.1')
            bundle('firebase', [
                    'firebase-crashlytics',
                    'firebase-analytics',
            ])

            /**
             * Utils
             */
            alias('blankj')
                    .to('com.blankj', 'utilcode')
                    .versionRef('utils')
            alias('joda-money')
                    .to('org.joda:joda-money:1.0.1')
            alias('splitties-res')
                    .to('com.louiscad.splitties', 'splitties-resources')
                    .versionRef('splitties')
            alias('splitties-room')
                    .to('com.louiscad.splitties', 'splitties-arch-room')
                    .versionRef('splitties')
            alias('splitties-coroutine-material-view')
                    .to('com.louiscad.splitties', 'splitties-views-coroutines-material')
                    .versionRef('splitties')
            alias('splitties-coroutine-view')
                    .to('com.louiscad.splitties', 'splitties-views-coroutines')
                    .versionRef('splitties')
            alias('splitties-mainthread')
                    .to('com.louiscad.splitties', 'splitties-mainthread')
                    .versionRef('splitties')
            alias('splitties-mainhandler')
                    .to('com.louiscad.splitties', 'splitties-mainhandler')
                    .versionRef('splitties')
            bundle('utils', [
                    'blankj',
                    'joda-money',
                    'splitties-res',
                    'splitties-room',
                    'splitties-mainthread',
                    'splitties-mainhandler',
                    'splitties-coroutine-view',
                    'splitties-coroutine-material-view',
            ])
        }
    }

}
rootProject.name = "Ziip For Zotero"
include ':app'
include ':core'
